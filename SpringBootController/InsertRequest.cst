<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" ResponseEncoding="UTF-8" Src="" Inherits="" Debug="True" Description="Template description here." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%-- 注册 定义的成员变量 --%>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="DB" Description="请选择名的数据来源" %>
<%@ Property Name="ContractNamespace" Type="System.String" Default="com.houbank." Optional="False" Category="Context" Description="源码输出的模块名称" %>

<%-- 启用 MAP方式 System-CSharpAlias  --%>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Map Name="JavaAlias" Src="System-JavaAlias.csmap" Description="Oracle to Java Type Map" %>

<script runat="template">
<!-- #include file=getNamefunction.cs -->
NameHelper nameHelper=new NameHelper();
</script>

package <%=ContractNamespace%>.<%=nameHelper.ModelName(SourceTable.Name)%>Service;

import javax.validation.constraints.NotNull;

public class Insert<%=nameHelper.ModelName(SourceTable.Name)%>Request  {
	<%--private static final long serialVersionUID = -3307895529384707655L; --%>
	
	<%-- 成员变量 --%>
    <% foreach (ColumnSchema column in this.SourceTable.Columns) 
    { 
    %>
        <%if(column.AllowDBNull==false && nameHelper.GetMemberVariableName(column.Name)!="id"){%>
        @NotNull(message = "<%= StringUtil.ToCamelCase(column.Name) %> 不能为空")
        <%}%>
    	private <%= JavaAlias[column.SystemType.FullName]%> <%= StringUtil.ToCamelCase(column.Name) %>;
        
        <% 
        } // end foreach (ColumnSchema column in this.SourceTable.Columns) 
        %>

    	<% foreach (ColumnSchema column in this.SourceTable.Columns) 
        { 
        %>
    	/**
    	 * @return 返回 <%= StringUtil.ToCamelCase(column.Name)%>。
    	 */
    	public <%= JavaAlias[column.SystemType.FullName]%> <%= nameHelper.getFunctionMemberVariableName(column.Name)%>() {
    		return <%= StringUtil.ToCamelCase(column.Name)%>;
    	}

    	/**
    	 * @param <%= nameHelper.GetMemberVariableName(column.Name)%> 要设置的 <%= nameHelper.GetMemberVariableName(column.Name)%>。
    	 */
    	public void <%= nameHelper.setFunctionMemberVariableName(column.Name)%>(<%= JavaAlias[column.SystemType.FullName]%> <%= nameHelper.GetMemberVariableName(column.Name)%>) {
    		this.<%= StringUtil.ToCamelCase(column.Name)%> = <%= nameHelper.GetMemberVariableName(column.Name)%>;
    	}
    <% 
    } 
    %>
}
